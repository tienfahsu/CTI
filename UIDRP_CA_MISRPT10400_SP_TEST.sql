USE [COGDB2]
GO
/****** Object:  StoredProcedure [dbo].[UIDRP_CA_MISRPT10400_SP]    Script Date: 2019/7/1 上午 09:06:18 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- COMM_CAFORM.PRG
-- =============================================
-- Author:		Frank
-- Create DATE: 2017/06/07
-- Description:	1.4	IDRP Nonleading Waive Form(CA/MISRPT10400)
-- WAIVE_V2.PRG FoxPro程式原始碼
-- =============================================
--ALTER PROCEDURE [dbo].[UIDRP_CA_MISRPT10400_SP]

DECLARE @DATE AS DATE ='2019-07-10',
@PKEY AS VARCHAR(20) ='JL20060'

--AS
BEGIN

----------------------------------------------
--變數區//宣告在這個SP中會用到的變數
----------------------------------------------
DECLARE @MESSAGE VARCHAR(500), @Status bit= 0
DECLARE @DATE4 AS DATE, @AD AS INT, @AC AS INT, @AB AS INT,@AA AS INT,@BB AS INT,@BC AS INT,@A AS INT,@MIS_DATE as DATE
  
DECLARE @WAVIE_LIST TABLE
(
	NOTIS_D DATE
	,CASENO VARCHAR(10)
	,IDNO   VARCHAR(10)
	,ACCTNMBR VARCHAR(16)
	,CARDNMBR VARCHAR(16)
	,DEBT_D DATE
	,JCIC_P DECIMAL(18, 2)
	,JCIC_INT DECIMAL(18, 2)
	,JCIC_FEE DECIMAL(18, 2)
	,CHK_INT DECIMAL(18, 2)
	,CHK_FEE DECIMAL(18, 2)
	,CHK_TAG VARCHAR(20)
	,LST_PAY_D DATETIME
	,REQ_DEBT_D DATE
) 
DECLARE @WAIVE_FORM TABLE
(
	NOTIS_D DATE
	,IDNO   VARCHAR(20)
	,ACCTNMBR VARCHAR(20)
	,AMT NUMERIC(18,2)
	,TXN_CODE VARCHAR(20)
	,TXN_DESC VARCHAR(20)
	,CHK_TAG VARCHAR(20)
) 
DECLARE @B4_RAINBOW TABLE
(
	NOTIS_D DATE
	,CASENO VARCHAR(10)
	,IDNO   VARCHAR(10)
	,ACCTNMBR VARCHAR(16)
	,CARDNMBR VARCHAR(16)
	,DEBT_D DATE
	,JCIC_P DECIMAL(18, 2)
	,JCIC_INT DECIMAL(18, 2)
	,JCIC_FEE DECIMAL(18, 2)
	,CHK_INT DECIMAL(18, 2)
	,CHK_FEE DECIMAL(18, 2)
	,CHK_TAG VARCHAR(20)
	,LST_PAY_D DATETIME
	,REQ_DEBT_D DATE
) 
DECLARE @SUMAY1 TABLE
(
	SN  NUMERIC(10, 0)
	,IDNO  VARCHAR(10)
	,NAME VARCHAR(12)
	,OPEN_D  DATE
	,CDC  NUMERIC(3, 0)
	,IFWO VARCHAR(1)
	,FIRST_DATE VARCHAR(7)
	,PERIOD NUMERIC(3, 0)
	,RATE NUMERIC(5, 2)
	,PAYAMOUNT NUMERIC(9, 0)
	,EXP_LOAN NUMERIC(16, 0)
	,CASH_CARD NUMERIC(16, 0)
	,CREDITCARD NUMERIC(16, 0)
	,TTL_DEBT NUMERIC(16, 0)
	,ACCTTYPE VARCHAR(3)
	,CARDNMBR VARCHAR(14)
	,IFTWOSTAGE VARCHAR(1)
	,RW_FLAG VARCHAR(1)
	,RW_ACCTBR VARCHAR(14)
	,CARDLOAN VARCHAR(1)
	,BOOC VARCHAR(3)
	,TAIL VARCHAR(10)
	,APCM VARCHAR(1)
	,WAIVE_TAG VARCHAR(30)
) 
DECLARE @WAIVE_DTL TABLE
(
	SN VARCHAR(10)
	,ACCTNMBR VARCHAR(30)
	,TXN_CODE  VARCHAR(30)
	,AMT NUMERIC(18,2)
	,TXN_DESC VARCHAR(30)
	,TEAM VARCHAR(30)
) 
DECLARE @WAIVE_COVER TABLE
(
	TXN_CODE  VARCHAR(30)
	,AMT NUMERIC(18,2)
	,AC VARCHAR(10)
)
    --IF OBJECT_ID('tempdb..#OUT1') IS NOT NULL DROP TABLE #OUT1
	--IF OBJECT_ID('tempdb..#OUT2') IS NOT NULL DROP TABLE #OUT2
	IF OBJECT_ID('tempdb..#B4_RAINBOW') IS NOT NULL DROP TABLE #B4_RAINBOW
	IF OBJECT_ID('tempdb..#SUMAY1') IS NOT NULL DROP TABLE #SUMAY1
	IF OBJECT_ID('tempdb..#WAIVE_DTL') IS NOT NULL DROP TABLE #WAIVE_DTL
	IF OBJECT_ID('tempdb..#WAIVE_COVER') IS NOT NULL DROP TABLE #WAIVE_COVER
	IF OBJECT_ID('tempdb..#TEMP') IS NOT NULL DROP TABLE #TEMP
	IF OBJECT_ID('tempdb..#WAIVE_BASE') IS NOT NULL DROP TABLE #WAIVE_BASE
	IF OBJECT_ID('tempdb..#WAIVE_BASE1') IS NOT NULL DROP TABLE #WAIVE_BASE1
	IF OBJECT_ID('tempdb..#WAIVE_BASE2') IS NOT NULL DROP TABLE #WAIVE_BASE2
	IF OBJECT_ID('tempdb..#CHK_WV_ACCT') IS NOT NULL DROP TABLE #CHK_WV_ACCT
	IF OBJECT_ID('tempdb..#PLAN_R18_1') IS NOT NULL DROP TABLE #PLAN_R18_1
	IF OBJECT_ID('tempdb..#PLAN_R18_2') IS NOT NULL DROP TABLE #PLAN_R18_2 
	IF OBJECT_ID('tempdb..#PLAN_R18_3') IS NOT NULL DROP TABLE #PLAN_R18_3
	IF OBJECT_ID('tempdb..#CHK_WV_ACCT2') IS NOT NULL DROP TABLE #CHK_WV_ACCT2
	IF OBJECT_ID('tempdb..#PLAN_CONT_0') IS NOT NULL DROP TABLE #PLAN_CONT_0
	IF OBJECT_ID('tempdb..#PLAN_CONT_1') IS NOT NULL DROP TABLE #PLAN_CONT_1
	IF OBJECT_ID('tempdb..#PLAN_CONT_2') IS NOT NULL DROP TABLE #PLAN_CONT_2
	IF OBJECT_ID('tempdb..#PLAN_CONT_3') IS NOT NULL DROP TABLE #PLAN_CONT_3
	IF OBJECT_ID('tempdb..#CHK_WV_ACCT3') IS NOT NULL DROP TABLE #CHK_WV_ACCT3
	IF OBJECT_ID('tempdb..#PLAN_ALL') IS NOT NULL DROP TABLE #PLAN_ALL
	IF OBJECT_ID('tempdb..#PLAN2') IS NOT NULL DROP TABLE #PLAN2
	IF OBJECT_ID('tempdb..#WAIVE_BASE2_1') IS NOT NULL DROP TABLE #WAIVE_BASE2_1
	IF OBJECT_ID('tempdb..#AFTER_RAINBOW') IS NOT NULL DROP TABLE #AFTER_RAINBOW
	IF OBJECT_ID('tempdb..#WAIVE_BASE3_0') IS NOT NULL DROP TABLE #WAIVE_BASE3_0
	IF OBJECT_ID('tempdb..#TEMP_WAIVE') IS NOT NULL DROP TABLE #TEMP_WAIVE
	IF OBJECT_ID('tempdb..#OUT3') IS NOT NULL DROP TABLE #OUT3
	IF OBJECT_ID('tempdb..#OUT4') IS NOT NULL DROP TABLE #OUT4


	--EXPORT EXCEL OLE
	DECLARE @EXCEL TABLE
	(
		[GROUPGUID] uniqueidentifier
		,[GUID] uniqueidentifier
		,TEMPLATE VARCHAR(100)
		,FOLDER VARCHAR(20)
		,[FILENAME] VARCHAR(200)
		,SHEETNAME VARCHAR(200)
	)

	DECLARE @EXCELCELLS TABLE
	(
		PARENTID uniqueidentifier		
		,CELL_Y INT
		,CELL_X INT
		,CELLVALUE NVARCHAR(100)
		,CELLTYPE NVARCHAR(10)
	)

	SET @MESSAGE=''
	SET @DATE4 = CAST(GETDATE() AS DATE)

   -- SET @DATE4 = '2010/07/01'

	--SELE*FROM CA_HIST WHERE NOTIS_D=DATE4 AND RW_FLAG='Y' INTO DBF WAIVE_BASE
	--SELE WAIVE_BASE
----------------------------------------------
--執行區
----------------------------------------------
BEGIN TRY

    SELECT A.PLAN_DT
	INTO #TEMP      
	FROM UIDRP_PLAN_R18 A
	LEFT JOIN UIDRP_PLAN_CONT B
	ON A.ACCTNMBR = B.ACCTNMBR
	WHERE A.PLAN_DT<@DATE4 OR B.PLAN_DT<@DATE4

	PRINT '#TEMP'

    SELECT @BB =COUNT(*) FROM #TEMP
    IF @BB >0
		SET @MESSAGE=@MESSAGE++CHAR(13)+'今日PLAN DATASET尚未更新'
	ELSE
	BEGIN
		IF NOT EXISTS(SELECT 1 FROM UIDRP_PRE_SUMMARY WHERE PROCDATE=@DATE)
		   SET @MESSAGE=@MESSAGE++CHAR(13)+'今日CA FORM尚未產生'
	    ELSE
		BEGIN

		PRINT 'UIDRP_PRE_SUMMARY OK'
		--RETURN
			 SELECT * 
			 INTO #WAIVE_BASE
			 FROM UIDRP_IDRP_CAFORM_NONLEADING_HIST WHERE NOTIS_D=CONVERT(varchar(10),@DATE,111) AND RW_FLAG='Y' 

			 SELECT @AA =COUNT(*) FROM #WAIVE_BASE
			 IF @AA > 0 
		     BEGIN
				--COPY FILE M:\DATASET\NA_IDRP\IDRP_DEBTDTL.DBF TO C:\TEMP\_DATASET\IDRP_DEBTDTL.DBF
				--COPY FILE M:\DATASET\NA_IDRP\IDRP_NONLEADING_BASE.DBF TO C:\TEMP\_DATASET\IDRP_NONLEADING_BASE.DBF
				--COPY FILE 'M:\DATASET\CARDS_DBF\'+DTOS(DATE4-1)+'\CARDS.DBF' TO C:\TEMP\_DATASET\CARDS.DBF
				--COPY FILE 'M:\DATASET\CARDS_DBF\'+DTOS(DATE4-1)+'\CARDS.CDX' TO C:\TEMP\_DATASET\CARDS.CDX
				--COPY FILE M:\APPS\IDRP\NA\BATCH\Q_plan\R18_PLAN\PLAN_R18.DBF TO C:\TEMP\_DATASET\PLAN_R18.DBF
				--COPY FILE M:\APPS\IDRP\NA\BATCH\Q_plan\CONT_PLAN\PLAN_CONT.DBF TO C:\TEMP\_DATASET\PLAN_CONT.DBF

				--USE C:\TEMP\_DATASET\IDRP_DEBTDTL IN 0 SHARED
				--USE C:\TEMP\_DATASET\IDRP_NONLEADING_BASE IN 0 SHARED
				--USE C:\TEMP\_DATASET\CARDS.DBF IN 0 SHARED ORDER TAG ACCTNMBR
				--USE C:\TEMP\_DATASET\PLAN_R18 IN 0 SHARED
				--USE C:\TEMP\_DATASET\PLAN_CONT IN 0 SHARED
			
				--SELE A.NOTIS_D, A.CASENO, A.IDNO, B.ACCTNMBR, B.CARDNMBR,  B.CURR_P, B.CURR_INT, B.CURR_OTH, B.TTL_DEBT_I FROM WAIVE_BASE A LEFT JOIN IDRP_DEBTDTL B ON A.IDNO=B.IDNO AND A.CASENO=B.CASENO WHERE B.TTL_DEBT_I>0 AND B.ACCTNMBR IN ('4','5','36') INTO DBF WAIVE_BASE1
				--SELE*FROM WAIVE_BASE1 WHERE ISNULL(ACCTNMBR) INTO CURSOR CHK_WV_ACCT
				--SELE CHK_WV_ACCT
				--IF RECCOUNT()>0
				--	MESSAGEBOX('沒抓到ACCOUNT, PLEASE CHECK1')
				--	CANCEL COPY TO M:\RESULT\IDRP\NA\CAFORM\NONLEADING\SUMMARY_20140813.xls xl5
				--  CD CD K:\IDRP\DEBT\CHKDEBT_45
				--  CD K:\IDRP\DEBT\CHKD
				--ENDIF

				SELECT  A.NOTIS_D, 
						A.CASENO, 
						A.IDNO, 
						B.ACCTNMBR, 
						B.CARDNMBR,  
						B.CURR_P, 
						B.CURR_INT , 
						B.CURR_OTH, 
						B.TTL_DEBT_I 
				INTO #WAIVE_BASE1
				FROM #WAIVE_BASE A 
					LEFT JOIN UIDRP_DE_IDRP_DEBTDTL B ON 
					A.IDNO=B.IDNO AND A.CASENO=B.CASENO 
				WHERE B.TTL_DEBT_I>0 AND (B.ACCTNMBR LIKE '5%' OR B.ACCTNMBR LIKE '4%' OR B.ACCTNMBR LIKE '36%')
			

			
				PRINT '#WAIVE_BASE1'
				--SELECT * FROM  #WAIVE_BASE1
				--RETURN
			 

				--SELECT * INTO #CHK_WV_ACCT	FROM #WAIVE_BASE1 WHERE ISNULL(ACCTNMBR,'')=''			
				--SELECT @AB =COUNT(*) FROM  #CHK_WV_ACCT
				IF EXISTS(SELECT 1 FROM #WAIVE_BASE1 WHERE ISNULL(ACCTNMBR,'')='')
				BEGIN
					SET @MESSAGE=@MESSAGE++CHAR(13)+'沒抓到ACCOUNT, PLEASE CHECK1'
					--Wait By Sage Start
					--	CANCEL COPY TO M:\RESULT\IDRP\NA\CAFORM\NONLEADING\SUMMARY_20140813.xls xl5
					--  CD CD K:\IDRP\DEBT\CHKDEBT_45
					--  CD K:\IDRP\DEBT\CHKD
					--Wait By Sage END
				END
				PRINT '#WAIVE_BASE1 OK'
			 
			--SELE*, 00000000.00 AS NEW_PRI, 000000.00 AS INT2, 000000.00 AS SERV_FEE2, 000000.00 AS LATE_FEE2, 000000.00 AS MBRZP_FEE2, 00000000.00 AS NEW_INT, 00000000.00 AS NEW_FEE, 000000.00 AS DIFF_INT, 000000.00 AS DIFF_FEE, 000000.00 AS  CHK_INT,000000.00 AS CHK_FEE, {//} AS LST_PAY_D, SPACE(10) AS CHK_TAG  FROM WAIVE_BASE1 INTO DBF WAIVE_BASE2
			--SELE WAIVE_BASE2
			--SCAN
			--	SCATTER MEMVAR
			--	SELE CARDS
			--	IF SEEK(ALLTRIM(M.ACCTNMBR))
			--		M.NEW_FEE=FEE
			--		M.NEW_INT=INTEREST
			--		M.NEW_PRI=BALANCE-FEE-INTEREST
			--		M.DIFF_INT=INTEREST-M.CURR_INT
			--		M.DIFF_FEE=FEE-M.CURR_OTH	
			--		M.LST_PAY_D=DATE_PMT
			--		SELE WAIVE_BASE2
			--		GATHER MEMVAR
			--	ENDIF
			--ENDSCAN	
				

				SELECT *, 
					CAST(00000000.00 AS NUMERIC(18,2)) AS NEW_PRI, 
					CAST(000000.00 AS NUMERIC(18,2)) AS INT2, 
					CAST(000000.00 AS NUMERIC(18,2)) AS SERV_FEE2, 
					CAST(000000.00 AS NUMERIC(18,2)) AS LATE_FEE2, 
					CAST(000000.00 AS NUMERIC(18,2)) AS MBRZP_FEE2, 
					CAST(00000000.00 AS NUMERIC(18,2)) AS NEW_INT, 
					CAST(00000000.00 AS NUMERIC(18,2)) AS NEW_FEE, 
					CAST(000000.00 AS NUMERIC(18,2)) AS DIFF_INT, 
					CAST(000000.00 AS NUMERIC(18,2)) AS DIFF_FEE, 
					CAST(000000.00 AS NUMERIC(18,2)) AS CHK_INT,
					CAST(000000.00 AS NUMERIC(18,2)) AS CHK_FEE, 
					CAST(NULL AS DATETIME) AS LST_PAY_D, 
					CAST(NULL AS VARCHAR(10)) AS CHK_TAG
				INTO #WAIVE_BASE2
				FROM #WAIVE_BASE1
		
				PRINT '#WAIVE_BASE2'
		        --SELECT * FROM  #WAIVE_BASE2
				--RETURN 

				UPDATE T
					SET NEW_FEE = S.FEE,
						NEW_INT = S.INTEREST,
						NEW_PRI = S.BALANCE- S.FEE- S.INTEREST,
						DIFF_INT = S.INTEREST- T.CURR_INT,
						DIFF_FEE = S.FEE-T.CURR_OTH,	
						LST_PAY_D = S.DATE_PMT
				FROM  #WAIVE_BASE2 T			 
				INNER JOIN DS_CARDS_VW S ON T.ACCTNMBR = S.ACCTNMBR

				PRINT 'UPDATE #WAIVE_BASE2'
				--SELECT * FROM #WAIVE_BASE2
				--RETURN
			 

			--R18的INT/FEE弄成負數，以便和簽約的值加總，計算需WAIVE的金額

			--SELE*FROM PLAN_R18 WHERE ACCTNMBR IN (SELE ACCTNMBR FROM WAIVE_BASE2) ORDER BY MIS_DT INTO DBF PLAN_R18_1
			--SELE ACCTNMBR, 'R18    ' AS PLAN_TAG, MIS_DT, -1*SUM(INT_BNP) AS INT2, -1*SUM(SERV_CHRG) AS SERV_FEE2, -1*SUM(LATE_CHRG) AS LATE_FEE2, -1*SUM(MBR_FEE) AS MBRZP_FEE2  FROM PLAN_R18 GROUP BY ACCTNMBR , MIS_DT INTO DBF PLAN_R18_2
			--SELE*FROM PLAN_R18_2 GROUP BY ACCTNMBR INTO DBF PLAN_R18_3
			--SELE*FROM WAIVE_BASE1 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM PLAN_R18_3) INTO CURSOR CHK_WV_ACCT2
			--SELE CHK_WV_ACCT2
			--IF RECCOUNT()>0
			--	MESSAGEBOX('沒抓到ACCOUNT, PLEASE CHECK2')
			--	UPDATE WAIVE_BASE2 SET CHK_TAG='NO PLAN1' WHERE ACCTNMBR IN (SELE ACCTNMBR FROM CHK_WV_ACCT2)
			--ENDIF

			SELECT * FROM #WAIVE_BASE2
			RETURN

			SELECT * 
			INTO #PLAN_R18_1
			FROM UIDRP_PLAN_R18 
			WHERE ACCTNMBR IN (SELECT ACCTNMBR FROM #WAIVE_BASE2) 
			ORDER BY MIS_DT 

		
			PRINT '#PLAN_R18_1'		
			-- SELECT * FROM  #PLAN_R18_1
			-- RETURN

			SELECT ACCTNMBR, 
				   CAST('R18' AS VARCHAR(20)) AS PLAN_TAG,
				   MIS_DT,
				   CAST(-1*SUM(INT_BNP)AS NUMERIC) AS INT2, 
				   CAST(-1*SUM(SERV_CHRG)AS NUMERIC) AS SERV_FEE2, 
				   CAST(-1*SUM(LATE_CHRG)AS NUMERIC) AS LATE_FEE2, 
				   CAST(-1*SUM(MBR_FEE)AS NUMERIC) AS MBRZP_FEE2
			INTO #PLAN_R18_2  
			FROM UIDRP_PLAN_R18
			GROUP BY ACCTNMBR,MIS_DT

			SELECT DISTINCT * 
			INTO #PLAN_R18_3
			FROM #PLAN_R18_2 
			--GROUP BY ACCTNMBR  
			PRINT '#PLAN_R18_3' 
			--SELECT * FROM #PLAN_R18_2
			--RETURN
		 
						
			SELECT ACCTNMBR 
			INTO #CHK_WV_ACCT2
			FROM #WAIVE_BASE1 
			WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #PLAN_R18_3) 

			PRINT '#CHK_WV_ACCT2'
			--SELECT * FROM #CHK_WV_ACCT2
			--RETURN
			
			SELECT @AC =COUNT(*) FROM  #CHK_WV_ACCT2
		     IF @AC > 0
				BEGIN
					SET @MESSAGE=@MESSAGE+CHAR(13)+'沒抓到ACCOUNT, PLEASE CHECK2'
				
					UPDATE #WAIVE_BASE2 
					SET CHK_TAG='NO PLAN1' 
					WHERE ACCTNMBR IN (SELECT ACCTNMBR FROM #CHK_WV_ACCT2)
				END
			
			--SELE*FROM PLAN_CONT WHERE ACCTNMBR IN (SELE ACCTNMBR FROM WAIVE_BASE2) ORDER BY MIS_DT INTO DBF PLAN_CONT_0
			--SELE*FROM PLAN_CONT_0 GROUP BY CASENO, PLAN_NBR, REC_NBR INTO DBF PLAN_CONT_1
			--SELE ACCTNMBR, 'CONTRACT' AS PLAN_TAG, MIS_DT, SUM(INT_BNP) AS INT2, SUM(SERV_CHRG) AS SERV_FEE2, SUM(LATE_CHRG) AS LATE_FEE2, SUM(MBR_FEE) AS MBRZP_FEE2  FROM PLAN_CONT_1 GROUP BY ACCTNMBR, MIS_DT INTO DBF PLAN_CONT_2
			--SELE*FROM PLAN_CONT_2 GROUP BY ACCTNMBR INTO DBF PLAN_CONT_3
			--SELE*FROM WAIVE_BASE1 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM PLAN_CONT_3) INTO CURSOR CHK_WV_ACCT3
			--SELE CHK_WV_ACCT3
			--IF RECCOUNT()>0
			--	MESSAGEBOX('沒抓到ACCOUNT, PLEASE CHECK3')
			--	UPDATE waive_base2 SET CHK_TAG='NO PLAN2' WHERE ACCTNMBR IN (SELE ACCTNMBR FROM CHK_WV_ACCT3)
			--ENDIF

			SELECT * 
			INTO #PLAN_CONT_0
			FROM UIDRP_PLAN_CONT 
			WHERE ACCTNMBR IN (SELECT ACCTNMBR FROM #WAIVE_BASE2) 
			ORDER BY MIS_DT
			
			PRINT '#PLAN_CONT_0'
			--SELECT * FROM  #PLAN_CONT_0
			--RETURN

			--SELECT * 
			--INTO #PLAN_CONT_1
			--FROM #PLAN_CONT_0 
			--GROUP BY CASENO, PLAN_NBR, REC_NBR 

			SELECT * 
			INTO #PLAN_CONT_1
			FROM #PLAN_CONT_0 
			WHERE CASENO IN (SELECT MAX(CASENO) FROM #PLAN_CONT_0 GROUP BY IDNO )
			
			
			PRINT '#PLAN_CONT_1'

			SELECT ACCTNMBR, 
				  'CONTRACT'AS PLAN_TAG,
				   MIS_DT, SUM(INT_BNP) AS INT2, 
				   SUM(SERV_CHRG) AS SERV_FEE2, 
				   SUM(LATE_CHRG) AS LATE_FEE2, 
				   SUM(MBR_FEE) AS MBRZP_FEE2
			INTO #PLAN_CONT_2  
			FROM #PLAN_CONT_1 
			GROUP BY ACCTNMBR, MIS_DT 

			PRINT '#PLAN_CONT_2'
			
			SELECT DISTINCT * 
			INTO #PLAN_CONT_3
			FROM #PLAN_CONT_2 
		  --GROUP BY ACCTNMBR 

		    PRINT '#PLAN_CONT_3'

			SELECT * 
			INTO #CHK_WV_ACCT3
			FROM #WAIVE_BASE1 
			WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #PLAN_CONT_3) 

			PRINT '#CHK_WV_ACCT3'
			
			SELECT @AD =COUNT(*) FROM  #CHK_WV_ACCT3
			IF @AD>0
				BEGIN
					SET @MESSAGE=@MESSAGE+CHAR(13)+'沒抓到ACCOUNT, PLEASE CHECK3'
				
					UPDATE #WAIVE_BASE2 
					SET CHK_TAG='NO PLAN2' 
					WHERE ACCTNMBR 
						IN (SELECT ACCTNMBR FROM #CHK_WV_ACCT3)
				END
			
			--SELE*FROM PLAN_R18_3 INTO DBF PLAN_ALL
			--SELE PLAN_ALL
			--APPEND FROM PLAN_CONT_3
			--SELE ACCTNMBR, SUM(INT2) AS INT2, SUM(SERV_FEE2) AS SERV_FEE2, SUM(LATE_FEE2) AS LATE_FEE2, SUM(MBRZP_FEE2) AS MBRZP_FEE2 FROM PLAN_ALL GROUP BY ACCTNMBR INTO DBF PLAN2

			SELECT * 
			INTO #PLAN_ALL
			FROM #PLAN_R18_3 

			PRINT '#PLAN_ALL'
			
			
			INSERT INTO #PLAN_ALL 
			SELECT * FROM #PLAN_CONT_3

			SELECT  ACCTNMBR, 
					CAST(SUM(INT2)AS NUMERIC) AS INT2, 
					CAST(SUM(SERV_FEE2)AS NUMERIC) AS SERV_FEE2, 
					CAST(SUM(LATE_FEE2)AS NUMERIC) AS LATE_FEE2, 
					CAST(SUM(MBRZP_FEE2)AS NUMERIC) AS MBRZP_FEE2
			INTO #PLAN2 
			FROM #PLAN_ALL GROUP BY ACCTNMBR 

			PRINT '#PLAN2 '

			--SELE WAIVE_BASE2
			--SCAN FOR EMPTY(CHK_TAG)
			--	SCATTER MEMVAR
			--	SELE PLAN2
			--	LOCATE FOR ALLTRIM(M.ACCTNMBR)=ALLTRIM(ACCTNMBR)
			--	IF FOUND()
			--		M.INT2=INT2
			--		M.SERV_FEE2=SERV_FEE2
			--		M.LATE_FEE2=LATE_FEE2
			--		M.MBRZP_FEE2=MBRZP_FEE2
			--		M.CHK_INT=M.NEW_INT-M.CURR_INT
			--		M.CHK_FEE=SERV_FEE2+LATE_FEE2+MBRZP_FEE2
			--		SELE WAIVE_BASE2
			--		GATHER MEMVAR
			--	ENDIF
			--ENDSCAN

			UPDATE T
			SET INT2 = S.INT2 ,
				SERV_FEE2 =S.SERV_FEE2,
			    LATE_FEE2 = S.LATE_FEE2 ,
				MBRZP_FEE2 = S.MBRZP_FEE2 ,
				CHK_INT =T.NEW_INT-T.CURR_INT,
				CHK_FEE = S.SERV_FEE2+ S.LATE_FEE2+ S.MBRZP_FEE2
			FROM #WAIVE_BASE2 T
			INNER JOIN #PLAN2 S ON T.ACCTNMBR = S.ACCTNMBR
			WHERE ISNULL(CHK_TAG,'')=''

			PRINT 'UPDATE #WAIVE_BASE2 T'
			--SELECT * FROM #WAIVE_BASE2
			 
			--UPDATE WAIVE_BASE2 SET CHK_TAG='Manual' WHERE EMPTY(CHK_TAG) AND CHK_FEE<>DIFF_FEE
			--UPDATE WAIVE_BASE2 SET CHK_TAG='Manual' WHERE EMPTY(CHK_TAG) AND CHK_FEE<0
			--UPDATE WAIVE_BASE2 SET CHK_TAG='Manual' WHERE EMPTY(CHK_TAG) AND DIFF_INT<0
			--SELE A.NOTIS_D, A.CASENO, A.IDNO, A.ACCTNMBR, A.CARDNMBR, TTOD(B.RE_DEBT_D) AS DEBT_D, A.CURR_P AS JCIC_P, A.CURR_INT AS JCIC_INT, A.CURR_OTH AS JCIC_FEE, A.DIFF_INT AS  CHK_INT, A.CHK_FEE , A.CHK_TAG, A.LST_PAY_D, TTOD(B.REQ_DEBT_D) AS REQ_DEBT_D FROM WAIVE_BASE2 A LEFT JOIN IDRP_NONLEADING_BASE B ON A.IDNO=B.IDNO AND A.CASENO=B.CASENO INTO DBF WAIVE_BASE2_1
			--UPDATE  WAIVE_BASE2_1 SET CHK_TAG='Manual' WHERE LST_PAY_D>REQ_DEBT_D
			
			UPDATE #WAIVE_BASE2 
			SET CHK_TAG='Manual'
			WHERE ISNULL(CHK_TAG,'')=''	AND CHK_FEE <> DIFF_FEE
			
			UPDATE #WAIVE_BASE2 
			SET CHK_TAG='Manual' 
			WHERE ISNULL(CHK_TAG,'')=''	AND CHK_FEE < 0

			UPDATE #WAIVE_BASE2 
			SET CHK_TAG='Manual'
			WHERE ISNULL(CHK_TAG,'')=''	AND DIFF_INT < 0

			SELECT  A.NOTIS_D, 
					A.CASENO, 
					A.IDNO, 
					A.ACCTNMBR, 
					A.CARDNMBR, 
					CAST(B.RE_DEBT_D AS DATE) AS DEBT_D,
					A.CURR_P AS JCIC_P, 
					A.CURR_INT AS JCIC_INT, 
					A.CURR_OTH AS JCIC_FEE, 
					A.DIFF_INT AS  CHK_INT, 
					A.CHK_FEE , 
					A.CHK_TAG, 
					A.LST_PAY_D ,
					CAST (B.REQ_DEBT_D AS DATE) AS REQ_DEBT_D
			INTO #WAIVE_BASE2_1
			FROM #WAIVE_BASE2 A 
					LEFT JOIN UIDRP_IDRP_NONLEADING_BASE_VW B 
					ON A.IDNO=B.IDNO AND A.CASENO=B.CASENO 
             
			PRINT '#WAIVE_BASE2_1'
			--SELECT * FROM #WAIVE_BASE2_1
			--RETURN

			UPDATE #WAIVE_BASE2_1 
			SET CHK_TAG= 'Manual'
			WHERE LST_PAY_D>REQ_DEBT_D



			--&&產生CA FORM
			--SELE*, SPACE(15) AS WAIVE_TAG FROM SUMAY INTO DBF SUMAY1
			--UPDATE SUMAY1 SET WAIVE_TAG='No Plan Deatil' WHERE IDNO IN (SELE IDNO FROM WAIVE_BASE2_1 WHERE CHK_TAG='NO PLAN')
			--UPDATE SUMAY1 SET WAIVE_TAG='Manual' WHERE IDNO IN (SELE IDNO FROM WAIVE_BASE2_1 WHERE CHK_TAG='Manual') AND EMPTY(WAIVE_TAG)
			--UPDATE SUMAY1 SET WAIVE_TAG='AUTO' WHERE EMPTY(WAIVE_TAG)
			--SELE SUMAY1
			--COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\summary_'+DTOS(DATE4) XL5
	
			SELECT *, 
				CAST(NULL AS VARCHAR(15)) AS WAIVE_TAG 
			INTO #SUMAY1
			FROM UIDRP_PRE_SUMMARY WHERE PROCDATE=@DATE

			PRINT '#SUMAY1'
			--SELECT * FROM #SUMAY1
			--RETURN

			
			UPDATE #SUMAY1 
				SET WAIVE_TAG='No Plan Deatil' 
			WHERE IDNO IN 
				(SELECT IDNO FROM #WAIVE_BASE2_1 WHERE CHK_TAG='NO PLAN')
			
			UPDATE #SUMAY1 
				SET WAIVE_TAG='Manual' 
			WHERE IDNO IN 
				(SELECT IDNO FROM #WAIVE_BASE2_1 WHERE CHK_TAG='Manual') AND ISNULL(WAIVE_TAG,'')=''
			
			UPDATE #SUMAY1 
				SET WAIVE_TAG='AUTO' 
			WHERE ISNULL(WAIVE_TAG,'')=''

			-- Wait By Sage Start
             --SELECT * FROM #SUMAY1
             INSERT INTO @SUMAY1 (SN,IDNO,NAME,OPEN_D,CDC,IFWO,FIRST_DATE,PERIOD,RATE,PAYAMOUNT,EXP_LOAN,CASH_CARD,CREDITCARD,TTL_DEBT,ACCTTYPE,CARDNMBR,IFTWOSTAGE,RW_FLAG,RW_ACCTBR,CARDLOAN,BOOC,TAIL,APCM,WAIVE_TAG) 
			 SELECT SN,IDNO,NAME,OPEN_D,CDC,IFWO,FIRST_DATE,PERIOD,RATE,PAYAMOUNT,EXP_LOAN,CASH_CARD,CREDITCARD,TTL_DEBT,ACCTTYPE,CARDNMBR,IFTWOSTAGE,RW_FLAG,RW_ACCTBR,CARDLOAN,BOOC,TAIL,APCM,WAIVE_TAG FROM #SUMAY1

			 PRINT '@SUMAY1'
			--SELECT * FROM @SUMAY1
			

			-- REFR Class IDRP.Modles.CA.MISRPT10401_EXPORT.EXCELEXPORT_SUMMARY1
			--COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\summary_'+DTOS(DATE4) XL5							
			-- Wait By Sage END

			--SELE*FROM WAIVE_BASE2_1 WHERE DEBT_D<={^2012/09/30} INTO DBF B4_RAINBOW
			--SELE*FROM WAIVE_BASE2_1 WHERE DEBT_D>{^2012/09/30} AND IDNO IN (SELE IDNO FROM SUMAY1 WHERE WAIVE_TAG='AUTO') INTO DBF AFTER_RAINBOW

			--SELE NOTIS_D, IDNO, ACCTNMBR, DIFF_INT AS AMT, '454'  AS TXN_CODE, '取消上期利息                            ' AS TXN_DESC, CHK_TAG FROM WAIVE_BASE2 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM B4_RAINBOW)  UNION ALL ;
			--SELE NOTIS_D, IDNO, ACCTNMBR, SERV_FEE2 AS AMT, '665'  AS TXN_CODE, '取消活用雙享金手續費                    ' AS TXN_DESC, CHK_TAG FROM WAIVE_BASE2 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM B4_RAINBOW) UNION ALL ;
			--SELE NOTIS_D, IDNO, ACCTNMBR, LATE_FEE2 AS AMT, '577'  AS TXN_CODE, '取消上期逾期費用                        ' AS TXN_DESC, CHK_TAG FROM WAIVE_BASE2 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM B4_RAINBOW) UNION ALL ;
			--SELE NOTIS_D, IDNO, ACCTNMBR, MBRZP_FEE2 AS AMT, '581'  AS TXN_CODE, '取消會員年費                            ' AS TXN_DESC, CHK_TAG  FROM WAIVE_BASE2 WHERE ACCTNMBR NOT IN (SELE ACCTNMBR FROM B4_RAINBOW)  INTO CURSOR WAIVE_BASE3_0

			SELECT * 
			INTO #B4_RAINBOW
			FROM #WAIVE_BASE2_1 
			WHERE DEBT_D<='2012/09/30' 

			PRINT '#B4_RAINBOW'
			--SELECT * FROM #B4_RAINBOW
			--RETURN

			SELECT * 
			INTO #AFTER_RAINBOW
			FROM #WAIVE_BASE2_1 
			WHERE DEBT_D > '2012/09/30'
				AND IDNO 
				IN (SELECT IDNO FROM #SUMAY1 WHERE WAIVE_TAG='AUTO') 

			PRINT  '#AFTER_RAINBOW (1)'
			--SELECT * FROM #AFTER_RAINBOW
			--RETURN

			SELECT NOTIS_D,IDNO,ACCTNMBR,AMT,TXN_CODE,TXN_DESC,CHK_TAG INTO #WAIVE_BASE3_0 FROM 
			(

				SELECT  NOTIS_D, 
						IDNO, 
						ACCTNMBR, 
						DIFF_INT AS AMT, 
						'454'  AS TXN_CODE, 
						'取消上期利息' AS TXN_DESC, 
						CHK_TAG 			 
				FROM #WAIVE_BASE2 
				WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #B4_RAINBOW)  		 
			
				UNION ALL
			
				SELECT  NOTIS_D, 
						IDNO, 
						ACCTNMBR, 
						SERV_FEE2 AS AMT, 
						'665' AS TXN_CODE, 
						'取消活用雙享金手續費' AS TXN_DESC, 
						CHK_TAG 
				FROM #WAIVE_BASE2 
				WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #B4_RAINBOW) 
			
			    UNION ALL
			
				SELECT  NOTIS_D, 
						IDNO, 
						ACCTNMBR, 
						LATE_FEE2 AS AMT, 
						'577' AS TXN_CODE, 
						'取消上期逾期費用' AS TXN_DESC, 
						CHK_TAG 
				FROM #WAIVE_BASE2 
				WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #B4_RAINBOW) 

			    UNION ALL 
			
				SELECT  NOTIS_D, 
						IDNO, 
						ACCTNMBR, 
						MBRZP_FEE2 AS AMT, 
						'581'  AS TXN_CODE, 
						'取消會員年費' AS TXN_DESC, 
						CHK_TAG  			
				FROM #WAIVE_BASE2 
				WHERE ACCTNMBR NOT IN (SELECT ACCTNMBR FROM #B4_RAINBOW)  ) AS UNALL


			PRINT 'UNION ALL '
			--SELECT * FROM  #WAIVE_BASE3_0
			--RETURN

			-- Wait By Sage
			
			--SELECT * FROM #B4_RAINBOW
			--RAINBOW之前查不到PLAN
            INSERT INTO @B4_RAINBOW	(NOTIS_D,CASENO,IDNO,ACCTNMBR,CARDNMBR,DEBT_D,JCIC_P,JCIC_INT,JCIC_FEE,CHK_INT,CHK_FEE,CHK_TAG,LST_PAY_D,REQ_DEBT_D) 
			SELECT NOTIS_D,CASENO,IDNO,ACCTNMBR,CARDNMBR,DEBT_D,JCIC_P,JCIC_INT,JCIC_FEE,CHK_INT,CHK_FEE,CHK_TAG,LST_PAY_D,REQ_DEBT_D
			FROM #B4_RAINBOW

			PRINT '@B4_RAINBOW'
		 
			--REFR Class IDRP.Modles.CA.MISRPT10401_EXPORT.EXCELEXPORT_B4_RAINBOW
			--&&RAINBOW之前查不到PLAN
			--	COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\WaiveForm\NEW\WAIVE_B4_RAINBOW_'+DTOS(DATE4) XL5
			-- Wait By Sage
		
			--SELECT * 
			--INTO #WAIVE_BASE3
			--FROM #WAIVE_BASE3_0 

			--PRINT '#WAIVE_BASE3'

			--SELECT * FROM  #WAIVE_BASE3_0 

			SELECT * 
			INTO #TEMP_WAIVE
			FROM #WAIVE_BASE3_0 
			WHERE AMT >0 AND ISNULL(CHK_TAG,'')='' AND IDNO IN (SELECT IDNO FROM #SUMAY1 WHERE WAIVE_TAG='AUTO') 
			ORDER BY NOTIS_D, ACCTNMBR 


			PRINT '#TEMP_WAIVE'
			--SELECT * FROM  #TEMP_WAIVE
		--	RETURN

			--SELECT * 
			--INTO #OUT1
			--FROM #AFTER_RAINBOW  

		    -- Wait By Sage
			--SELECT * FROM #OUT1
			INSERT INTO @WAVIE_LIST (NOTIS_D,CASENO,IDNO,ACCTNMBR,CARDNMBR,DEBT_D,JCIC_P,JCIC_INT,JCIC_FEE,CHK_INT,CHK_FEE,CHK_TAG,LST_PAY_D,REQ_DEBT_D) 
			SELECT NOTIS_D,CASENO,IDNO,ACCTNMBR,CARDNMBR,DEBT_D,JCIC_P,JCIC_INT,JCIC_FEE,CHK_INT,CHK_FEE,CHK_TAG,LST_PAY_D,REQ_DEBT_D
			FROM #AFTER_RAINBOW 

			PRINT '@WAVIE_LIST '
			-- REFR Class IDRP.Modles.CA.MISRPT10401_EXPORT.EXCELEXPORT_OUT1			
			--COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\WaiveForm\NEW\WAVIE_LIST_'+DTOS(DATE4)+'_'+ALLTRIM(STR(RECCOUNT()))+'筆' XL5
			-- Wait By Sage

			--SELECT * 
			--INTO #OUT2
			--FROM #TEMP_WAIVE 

			-- Wait by Sage Start
			--SELECT * FROM #OUT2
		    INSERT INTO @WAIVE_FORM (NOTIS_D,IDNO,ACCTNMBR,AMT,TXN_CODE,TXN_DESC,CHK_TAG) 
			SELECT NOTIS_D,IDNO,ACCTNMBR,AMT,TXN_CODE,TXN_DESC,CHK_TAG
			FROM #TEMP_WAIVE 
		    
			PRINT '@WAIVE_FORM'

			-- REFR Class IDRP.Modles.CA.MISRPT10401_EXPORT.EXCELEXPORT_OUT2			
			--	COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\WaiveForm\NEW\WAIVE_FORM_'+DTOS(DATE4) XL5
			--Wait By Sage END
				
			SELECT dbo.ALLTRIM(ACCTNMBR) AS ACCTNMBR, 
				   dbo.ALLTRIM(TXN_CODE) AS TCODE, 
				   LTRIM(STR(AMT,10,2)) AS AMT, 
				   TXN_DESC 
			INTO #OUT3
			FROM #TEMP_WAIVE 

			PRINT '#OUT3'

			UPDATE #OUT3 SET ACCTNMBR='  '+ACCTNMBR 
			WHERE ACCTNMBR LIKE'36%'
		
			UPDATE #OUT3 SET AMT=REPLACE(AMT,'.','')

			SELECT ACCTNMBR+TCODE+RIGHT('00000000'+dbo.ALLTRIM(AMT),9)+'10000'+TXN_DESC AS TXN_DESC
			INTO #OUT4
			FROM #OUT3

			PRINT '#OUT4'
			 SELECT * FROM @WAIVE_FORM
			 RETURN
		 

			INSERT INTO UIDRP_COL_IDRP (MIS_DATE,CREATE_BY_ID,CREATE_DT) VALUES(GETDATE(),@PKEY,GETDATE() )



			DECLARE @GROUPID UNIQUEIDENTIFIER,@GUID UNIQUEIDENTIFIER,@FFOUT VARCHAR(200),@ROWCNT INT
				DECLARE @EX_TXN_CODE VARCHAR(20),@EX_AMT NUMERIC(18,2),@EX_AC INT,@EX_ACCTNMBR VARCHAR(16),@EX_TXN_DESC NVARCHAR(30)
	 

			SET @GROUPID = NEWID()
			 --PAGE Cover
		
		    SET @GUID = NEWID()
			SET @FFOUT ='Col_IDRP_'+CONVERT(varchar, @DATE, 112)+'_01';
			
		    INSERT INTO @EXCEL 	SELECT @GROUPID	,@GUID ,'COL_IDRP.xls','Excel/Template/CA',@FFOUT,'Cover'
			
			INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , 2, 1 ,+ CONVERT(varchar, @DATE, 111) , 'STRING')
			INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , 4, 1 ,+ @FFOUT , 'STRING')

			 DECLARE WAIVE_COVER CURSOR FOR 
			 SELECT TXN_CODE, SUM(AMT) AS AMT, COUNT(*) AS AC FROM #TEMP_WAIVE

			 OPEN WAIVE_COVER

			 SET @ROWCNT = 25;

			 FETCH NEXT FROM WAIVE_COVER INTO @EX_TXN_CODE,@EX_AMT ,@EX_AC
			 WHILE(  @@FETCH_STATUS = 0 )
			 BEGIN
			     INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 0 , @EX_TXN_CODE , 'STRING')
                 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 1 , @EX_AMT , 'DECIMAL')
                 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 2 , @EX_AC , 'DECIMAL')
				 SET @ROWCNT=@ROWCNT+1
			 	 FETCH NEXT FROM WAIVE_COVER INTO @EX_TXN_CODE,@EX_AMT ,@EX_AC
			 END
			 CLOSE WAIVE_COVER
			 DEALLOCATE WAIVE_COVER

			 --PAGE DTL			 
			 SET @GUID = NEWID()
	 		
		     INSERT INTO @EXCEL SELECT @GROUPID	,@GUID ,'COL_IDRP.xls','Excel/Template/CA',@FFOUT,'DTL'

			 DECLARE WAIVE_DTL CURSOR FOR 
			 SELECT ACCTNMBR,TXN_CODE,AMT,TXN_DESC FROM #TEMP_WAIVE

			 OPEN WAIVE_DTL

			 SET @ROWCNT = 1
			 FETCH NEXT FROM WAIVE_DTL INTO @EX_ACCTNMBR, @EX_TXN_CODE,@EX_AMT,@EX_TXN_DESC
			 WHILE(  @@FETCH_STATUS = 0 )
			 BEGIN
			     INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 0 , @ROWCNT , 'DECIMAL')
                 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 1 , @EX_ACCTNMBR , 'STRING')
                 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 2 , @EX_TXN_CODE , 'STRING')
				 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 3 , @EX_AMT , 'DECIMAL')
				 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 4 , @EX_TXN_DESC , 'STRING')
				 INSERT INTO @EXCELCELLS (PARENTID,CELL_Y,CELL_X,CELLVALUE,CELLTYPE) VALUES (@GUID , @ROWCNT , 5 , 'EHR' , 'STRING')

				 SET @ROWCNT=@ROWCNT+1
			 	 FETCH NEXT FROM WAIVE_DTL INTO @EX_ACCTNMBR, @EX_TXN_CODE,@EX_AMT,@EX_TXN_DESC
			 END
			 CLOSE WAIVE_DTL
			 DEALLOCATE WAIVE_DTL


			-- Wait By Sage Start
			--SELE #OUT4
			--COPY TO 'M:\RESULT\IDRP\NA\CAFORM\NONLEADING\WaiveForm\COL_IDRP_'+DTOS(DATE4)+'_'+ALLTRIM(STR(RECCOUNT()))+'筆' SDF
			--SELE TXN_CODE, SUM(AMT) AS AMT, COUNT(*) AS AC FROM TEMP_WAIVE GROUP BY TXN_CODE INTO CURSOR WAIVE_COVER
			--SELE RECNO() AS SN, ACCTNMBR, TXN_CODE, AMT, TXN_DESC, 'EHR' AS TEAM FROM TEMP_WAIVE INTO CURSOR WAIVE_DTL
			
			--OLE1=CREATEOBJECT("Excel.Application")
			--OLE1.VISIBLE=.F.
			--OLE1.WORKBOOKS.OPEN('M:\APPS\0前置協商\AP\Report\Waive\COL_IDRP.xls')
			--OLE1.SHEETS("Cover").SELECT
			--OLE1.CELLS(3,2).VALUE=DTOC(DATE4)
			--OLE1.CELLS(5,2).VALUE='Col_IDRP_'+DTOS(DATE4)+'_01'

			--SELE WAIVE_COVER
			--GO TOP
			--I=26
			--SCAN
			--	SCATTER TO SUMARY
			--	FOR J = 1 TO 3
			--		OLE1.CELLS(I,J).VALUE=SUMARY[J]
			--	ENDFOR
			--	I=I+1
			--ENDSCAN

			--OLE1.SHEETS("DTL").SELECT

			--SELE WAIVE_DTL
			--GO TOP
			--I=2
			--SCAN
			--	SCATTER TO DTL
			--	FOR J = 1 TO 6
			--		OLE1.CELLS(I,J).VALUE=DTL[J]
			--	ENDFOR
			--		I=I+1
			--	ENDSCAN

			--	OLE1.WORKBOOKS('COl_IDRP.XLS').SAVEAS('M:\RESULT\IDRP\NA\CAFORM\NONLEADING\WaiveForm\NEW\Col_IDRP_'+DTOS(DATE4)+'_01.xls')
			--	OLE1.QUIT
			--	MESSAGEBOX('執行完畢')
			--	CLOSE DATA			
			-- Wait By Sage END

			SELECT TXN_CODE,SUM(AMT) AS AMT,COUNT(*) AS AC
			INTO #WAIVE_COVER
			FROM #TEMP_WAIVE 
			GROUP BY TXN_CODE
			
            INSERT INTO @WAIVE_COVER (TXN_CODE,AMT,AC) 
			SELECT TXN_CODE,AMT,AC 
			FROM #WAIVE_COVER

			SELECT ROW_NUMBER()OVER(ORDER BY ACCTNMBR ASC) AS SN,ACCTNMBR,TXN_CODE,AMT,TXN_DESC,'EHR' AS TEAM
			INTO #WAIVE_DTL
			FROM #TEMP_WAIVE

			INSERT INTO @WAIVE_DTL(SN,ACCTNMBR,TXN_CODE,AMT,TXN_DESC,TEAM) 
			SELECT SN,ACCTNMBR,TXN_CODE,AMT,TXN_DESC,TEAM 
			FROM #WAIVE_DTL

			SET @STATUS=1
			SET @MESSAGE=@MESSAGE++CHAR(13)+'執行完畢'

			PRINT '執行完畢'

		END
    ELSE 	   
		BEGIN
			SET @STATUS=1
			SET @MESSAGE=@MESSAGE++CHAR(13)+'今日無RW ACCT，不需產生WAIVE FORM'
	    END
   END	
END
END TRY
BEGIN CATCH
	SET @Status= 0
	SET @MESSAGE = ERROR_MESSAGE()
END CATCH
----------------------------------------------
--回傳區
----------------------------------------------		
	SELECT @STATUS AS [Status],@MESSAGE AS [Message]

	SELECT * FROM @WAVIE_LIST
	SELECT * FROM @WAIVE_FORM
	SELECT * FROM @B4_RAINBOW
	SELECT * FROM @SUMAY1
	SELECT * FROM @EXCEL
	SELECT * FROM @EXCELCELLS
END


